plugins {
    id "io.freefair.lombok" version "8.14"
    id "com.github.ben-manes.versions" version "0.52.0"
}

apply plugin: "java-library"
apply plugin: "jacoco"
apply plugin: "maven-publish"
apply plugin: "signing"

group = "nl.colorize"
version = "2025.2"
compileJava.options.encoding = "UTF-8"

ext.libgdxVersion = "1.13.0"
ext.teavmVersion = "0.11.0"
ext.jfxVersion = "21.0.2"

java {
    sourceCompatibility = "21"
    targetCompatibility = "21"
    sourceSets.main.java.srcDirs = ["source"]
    sourceSets.main.resources.srcDirs = ["resources"]
    sourceSets.test.java.srcDirs = ["test"]
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
    maven {
        url = "https://jitpack.io"
    }
}

dependencies {
    implementation "nl.colorize:colorize-java-commons:2025.1"

    implementation "org.openjfx:javafx-base:${jfxVersion}"
    implementation "org.openjfx:javafx-base:${jfxVersion}:mac-aarch64"
    implementation "org.openjfx:javafx-base:${jfxVersion}:win"
    implementation "org.openjfx:javafx-graphics:${jfxVersion}"
    implementation "org.openjfx:javafx-graphics:${jfxVersion}:mac-aarch64"
    implementation "org.openjfx:javafx-graphics:${jfxVersion}:win"
    implementation "org.openjfx:javafx-media:${jfxVersion}"
    implementation "org.openjfx:javafx-media:${jfxVersion}:mac-aarch64"
    implementation "org.openjfx:javafx-media:${jfxVersion}:win"

    implementation "com.badlogicgames.gdx:gdx:${libgdxVersion}"
    implementation "com.badlogicgames.gdx:gdx-platform:${libgdxVersion}:natives-desktop"
    implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:${libgdxVersion}"
    implementation "com.badlogicgames.gdx:gdx-freetype:${libgdxVersion}"
    implementation "com.badlogicgames.gdx:gdx-freetype-platform:${libgdxVersion}:natives-desktop"
    implementation("com.badlogicgames.gdx:gdx-tools:${libgdxVersion}") {
        exclude group: "org.lwjgl.lwjgl"
    }

    implementation "org.teavm:teavm-jso:${teavmVersion}"
    implementation "org.teavm:teavm-jso-apis:${teavmVersion}"
    implementation "org.teavm:teavm-classlib:${teavmVersion}"
    implementation "org.teavm:teavm-tooling:${teavmVersion}"

    implementation "com.github.mgsx-dev.gdx-gltf:gltf:2.2.1"
    implementation "com.tagtraum:casampledsp-complete:0.9.32"

    testImplementation "org.junit.jupiter:junit-jupiter:5.13.2"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"
}

javadoc {
    exclude "**/java2d/**", "**/libgdx/**", "**/jfx/**", "**/teavm/**", "**/headless/**"
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ["**/renderer/*/*", "**/*demo*"])
        })
    }
}

task coverage(dependsOn: ["test", "jacocoTestReport"]) {
    doLast {
        def report = file("${buildDir}/reports/jacoco/test/html/index.html").text
        def coverage = report =~ "tfoot.*?ctr2.*?>([\\d.]+%).*?tfoot"
        println "-" * 40
        println "Test coverage: " + coverage[0][1]
    }
}

task transpileDemoApplication2D(type: JavaExec, dependsOn: jar) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "nl.colorize.multimedialib.tool.TeaVMTranspilerTool"
    args "--project", "MultimediaLib-TeaVM-Demo2D",
         "--resources", "resources",
         "--out", "${buildDir}/browserdemo2d",
         "--main", "nl.colorize.multimedialib.tool.TeaDemoLauncher",
         "--meta", "demo:2d"
}

task transpileDemoApplication3D(type: JavaExec, dependsOn: jar) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "nl.colorize.multimedialib.tool.TeaVMTranspilerTool"
    args "--project", "MultimediaLib-TeaVM-Demo3D",
         "--resources", "resources",
         "--out", "${buildDir}/browserdemo3d",
         "--main", "nl.colorize.multimedialib.tool.TeaDemoLauncher",
         "--meta", "demo:3d"
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = "multimedialib"
            from components.java

            pom {
                name = "MultimediaLib"
                description = "Build multimedia applications that support desktop, mobile, and web."
                url = "https://www.clrz.nl"

                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }

                developers {
                    developer {
                        id = "colorize"
                        name = "Colorize"
                        email = "contact@colorize.nl"
                    }
                }

                scm {
                    connection = "scm:git:https://github.com/colorizenl/multimedialib.git"
                    developerConnection = "scm:git:https://github.com/colorizenl/multimedialib.git"
                    url = "https://github.com/colorizenl/multimedialib"
                }
            }
        }
    }

    repositories {
        maven {
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username = project.hasProperty("mavenCentralUser") ? mavenCentralUser : "dummy"
                password = project.hasProperty("mavenCentralPassword") ? mavenCentralPassword : "dummy"
            }
        }
    }
}

signing {
    sign publishing.publications.maven
}
